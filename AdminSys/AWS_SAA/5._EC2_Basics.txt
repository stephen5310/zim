Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-07-03T12:09:12+00:00

====== 5. EC2 Basics ======
Créée le Monday 03 July 2023

===== Billing Service =====

* Allow IAM users with Billing view permission to access Billing by using root account and modifying Account settings
* Go to Bills to see what service is billing you
* Go to Budget to define budgets

===== EC2 overview =====

* Elastic Compute Cloud = Infrastructure as a Service
* Allows to : 
	* Rent VM (EC2)
	* Store data on virtual drives (EBS)
	* Distributing load accross machines (ELB)
	* Scaling services using an auto-scaling group (ASG)
* Sizing and configuration options :
	* Operating System : linux, windows, Mac OS
	* CPU power and cores
	* RAM
	* Storage space :
		* Network-attached (EBS, EFS)
		* hardware (Instance store)
	* Network card : Speed, Public IP
	* Firewall rules : Security groups
	* Bootstrap script : User Data (runs as root)
	* For instance types : https://aws.amazon.com/ec2/instance-types/

===== Types overview =====

* Naming convention : m5.2xlarge
	* m : instance class
	* 5 : generation (improves over time)
	* 2xlarge : size within class
* Instances are optimized for different use cases
* General purpose : balance between compute, memory and networking
* Compute optimized : compute intensive tasks that require high performance processors
* Memory optimized : fast performance on large data sets in memory processing
* Storage optimized : access a lot of data sets on local storage
* Go to https://instances.vantage.sh/ for more details

===== Security Groups =====

* Control how traffic is allowed into or out of EC2 instances like a firewall
* Only contain allow rules, which can reference by IP or SG :
	* Reference by IP to allow an IP ranges
	* Reference by SG to allow other SGs (all instance with SG will be allowed)
* Regulate : 
	* Access to ports
	* Authorised IP ranges
	* Control inbound and outbound network
* Can be attached to multiple instances
* An instance can have multiple SG attached
* Bound to region/VPC combination
* Instance does not see traffic blocked by SG
* Maintain one separate SG for SSH access
* Time out => SG issue
* Connection refused => app error or not launched
* By default all inbound is blocked and all outbound is authorized
* Use **Instance Connect** by selecting the instance and clicking on **Connect** to open a browser-based ssh session
	* Requires SSH to be authorized

===== Instance Roles =====

* Attach by clicking on **Actions > Security > Modify IAM role**

===== Instances Purchasing Options =====
https://aws.amazon.com/ec2/pricing/

* On-Demand Instances : short workload, predictable pricing, pay by second
* Reserved (1&3 years) :
	* Reserved Instances : long workloads
	* Convertible Reserved Instances : long workloads with flexible instances, change Instance Type, Family, OS, scope and tenancy
	* Reserve a specific instance attributes (Instance Type, Region/AZ, Tenancy, OS)
	* Buy or sell in Reserved Instance Marketplace
* Savings Plans (1&3 years) : 
	* Commitment to an amount of usage, long workload
	* Anything beyond is billed at the On-Demand price
	* Locked to specific instance family & AWS region
	* Flexible accross Instance Size, OS and tenancy
* Spot Instances : short workloads, cheap, can lose instances (less reliable)
	* Useful for workloads resilient to failure
* Dedicated Hosts : book an entire physical server, control instance placement
	* Useful for compliance requirements, server-bound software licenses
	* On-Demand / Reserved
* Dedicated Instances : no other customers will share hardware
	* No access to the physical server
* Capacity Reservations : reserve capacity in a specific AZ for any duration
	* Always access to capacity when needed
	* No time commitment (create/cancel anytime), no discounts
	* Charged at On-Demand rate whether you run instances or not
	* Suitable for short-term, uninterrrupted workloads in a specific AZ
	* Combine with Regional Reserved Instances and Savings Plans to benefit from billing discounts

===== Spot Instances & Spot Fleet =====

* Two ways to launch :
	* Launch directly using EC2 instance launch
	* Launch using a Spot Fleet configuration at EC2 Spot Requests
* Define **max spot price** and get the instance while the current price < max spot price
	* The hourly spot price varies based on offer and capacity
	* When the max is reached you have 2mn grace period to stop or terminate the instance
* Use **Spot Block** to block the instance during a time frame (1 to 6H) without interrruptions 
	* In rare situations, the instance may be reclaimed
* Below is the lifecycle of a spot instance
{{.\pasted_image.png}}
* Sport instances can be cancelled only in **open, active or disabled** states
* The **Spot Request** must be cancelled first, then the instances have to be terminated manually
* **Spot fleets = spot instances + (optional) on-demande instances**
* The fleet will try to meet the target capacity with price constraints :
	* Define possible launch pools : instance type, OS, AZ
	* The fleet chooses the most appropriate launch pool
	* The fleet stops launching instances when reaching capacity or max cost
* Strategies to allocate spot instances are lowestPrice, diversified, capacityOptimized, priceCapacityOptimized
