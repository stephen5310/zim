Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-09-13T19:08:13+02:00

====== Section 21 ======
Created mardi 13 septembre 2022

====== Databases in AWS ======

* Choose based on architecture : 
	* Read-heavy, write-heavy, balanced workload ? Throughput needs ?
	* Will it change, does it need to scale or fluctuate during the day ?
	* How much data to store and for how long ? Will it grow ? Average object size ? How are they accessed ?
	* Data durability ? Source of the truth for the data ?
	* Latency requirements ? Concurrent users ?
	* Data model ? How will you query the data ? Joins ? Structured ? Semi-Structured ?
	* Strong schema ? More flexibility ? Reporting ? Search ? RDBMS / NoSQL ?
	* Licence costs ? Switch to Cloud Native DB such as Aurora ?
* RDBMS (SQL / OLTP) : RDS, Aurora - great for joins
* NoSQL - no joins, no SQL : DynamoDB (JSON), ElastiCache (key/value), Neptune (graphs), DocumentDB (for MongoDB), Keyspaces (AWS version of Cassandra)
* Object Store : S3 (for big objects) / Glacier (for backups / archives)
* Data Warehouse (SQL Analytics / BI) : Redshift (OLAP), Athena, EMR
* Search : OpenSearch (JSON) - free text, unstructured searches
* Graphs : Amazon Neptune - displays relationships between data
* Ledger : Amazon Quantum Ledger Database
* Time series : Amazon Timestream

===== DocumentDB =====

* Aurora version of MongoDB
* Store, query, and index JSON data
* Similar to Aurora
* Automatically scales to workloads with millions of req/s

===== Neptune =====

* Fully managed graph database
* A popular graph dataset would be a social network
	* Users have friends
	* Posts have comments
	* Comments have likes from users
	* Users share and like posts
* HA across 3 AZ, with up to 15 read replicas
* Build and run apps working with highly connected datasets - optimized for complex and hard queries
* Can store up to billions or relations and query the graph with ms latency
* Great knowledge graphs, fraud detection, recommendation engines, social networking

===== Keyspaces =====

* AWS version of Cassandra
* Serverless, scalable, HA, fully managed by AWS
* Tables are replicated 3 times across multiple AZ
* Use CQL
* Single-digit ms latency at any scale, 1000s of req/s
* Capacity : On-demand or provisioned with auto-scaling
* Encryption, backup, PITR up to 35 days
* Used to store IoT devices info, time-series data, ...

===== QLDB =====

* Quatum Ledger Database
* Ledger is a book recording financial transactions
* Fully Managed, Serverless, HA, Replication across 3 AZ
* Used to review history of all the changes made to your app data over time
* Immutable system : no entry can be removed or modified, cryptographically verifiable
* 2-3x better performance than common ledger blockchain frameworks, manipulate data using SQL
* Difference with Amazon Managed Blockchain : no decentralization component, in accordance with financial regulation rules

===== Timestream =====

* Fully managed, fast, scalable, serverless time series database
* Store and analyze trillions of events/d
* 1000s x faster & 1/10th the cost of RDBS
* Scheduled queries, multi-measure records, SQL compatibility
* Data storage tiering : recent data kept in memory and historical data kept in a cost-optimized storage
* Buil-in time series analytics functions (helps identify patterns in data in near real-time)
* Encryption in transit and at rest
* Use cases : IoT apps, operational apps, real-time analytics, ...
